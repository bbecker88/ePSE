#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4200
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ePortafolio.Models.ePortafolio
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="ePortafolio")]
	public partial class ePortafolioDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAlumnosGrupo(AlumnosGrupo instance);
    partial void UpdateAlumnosGrupo(AlumnosGrupo instance);
    partial void DeleteAlumnosGrupo(AlumnosGrupo instance);
    partial void InsertTrabajosOutcomeAlumno(TrabajosOutcomeAlumno instance);
    partial void UpdateTrabajosOutcomeAlumno(TrabajosOutcomeAlumno instance);
    partial void DeleteTrabajosOutcomeAlumno(TrabajosOutcomeAlumno instance);
    partial void InsertArchivos(Archivos instance);
    partial void UpdateArchivos(Archivos instance);
    partial void DeleteArchivos(Archivos instance);
    partial void InsertArchivosGrupo(ArchivosGrupo instance);
    partial void UpdateArchivosGrupo(ArchivosGrupo instance);
    partial void DeleteArchivosGrupo(ArchivosGrupo instance);
    partial void InsertEvaluacionesGruposProfesor(EvaluacionesGruposProfesor instance);
    partial void UpdateEvaluacionesGruposProfesor(EvaluacionesGruposProfesor instance);
    partial void DeleteEvaluacionesGruposProfesor(EvaluacionesGruposProfesor instance);
    partial void InsertEvaluacionesOutcomeProfesor(EvaluacionesOutcomeProfesor instance);
    partial void UpdateEvaluacionesOutcomeProfesor(EvaluacionesOutcomeProfesor instance);
    partial void DeleteEvaluacionesOutcomeProfesor(EvaluacionesOutcomeProfesor instance);
    partial void InsertGrupos(Grupos instance);
    partial void UpdateGrupos(Grupos instance);
    partial void DeleteGrupos(Grupos instance);
    partial void InsertTrabajos(Trabajos instance);
    partial void UpdateTrabajos(Trabajos instance);
    partial void DeleteTrabajos(Trabajos instance);
    #endregion
		
		public ePortafolioDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["ePortafolioConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ePortafolioDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ePortafolioDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ePortafolioDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ePortafolioDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<AlumnosGrupo> AlumnosGrupo
		{
			get
			{
				return this.GetTable<AlumnosGrupo>();
			}
		}
		
		public System.Data.Linq.Table<TrabajosOutcomeAlumno> TrabajosOutcomeAlumno
		{
			get
			{
				return this.GetTable<TrabajosOutcomeAlumno>();
			}
		}
		
		public System.Data.Linq.Table<Archivos> Archivos
		{
			get
			{
				return this.GetTable<Archivos>();
			}
		}
		
		public System.Data.Linq.Table<ArchivosGrupo> ArchivosGrupo
		{
			get
			{
				return this.GetTable<ArchivosGrupo>();
			}
		}
		
		public System.Data.Linq.Table<EvaluacionesGruposProfesor> EvaluacionesGruposProfesor
		{
			get
			{
				return this.GetTable<EvaluacionesGruposProfesor>();
			}
		}
		
		public System.Data.Linq.Table<EvaluacionesOutcomeProfesor> EvaluacionesOutcomeProfesor
		{
			get
			{
				return this.GetTable<EvaluacionesOutcomeProfesor>();
			}
		}
		
		public System.Data.Linq.Table<Grupos> Grupos
		{
			get
			{
				return this.GetTable<Grupos>();
			}
		}
		
		public System.Data.Linq.Table<Trabajos> Trabajos
		{
			get
			{
				return this.GetTable<Trabajos>();
			}
		}
	}
	
	[Table(Name="EPSE.AlumnosGrupo")]
	public partial class AlumnosGrupo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _AlumnoId;
		
		private int _GrupoId;
		
		private string _Nota;
		
		private System.Nullable<int> _EvaluacionId;
		
		private EntityRef<Grupos> _Grupos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAlumnoIdChanging(string value);
    partial void OnAlumnoIdChanged();
    partial void OnGrupoIdChanging(int value);
    partial void OnGrupoIdChanged();
    partial void OnNotaChanging(string value);
    partial void OnNotaChanged();
    partial void OnEvaluacionIdChanging(System.Nullable<int> value);
    partial void OnEvaluacionIdChanged();
    #endregion
		
		public AlumnosGrupo()
		{
			this._Grupos = default(EntityRef<Grupos>);
			OnCreated();
		}
		
		[Column(Storage="_AlumnoId", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string AlumnoId
		{
			get
			{
				return this._AlumnoId;
			}
			set
			{
				if ((this._AlumnoId != value))
				{
					this.OnAlumnoIdChanging(value);
					this.SendPropertyChanging();
					this._AlumnoId = value;
					this.SendPropertyChanged("AlumnoId");
					this.OnAlumnoIdChanged();
				}
			}
		}
		
		[Column(Storage="_GrupoId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int GrupoId
		{
			get
			{
				return this._GrupoId;
			}
			set
			{
				if ((this._GrupoId != value))
				{
					if (this._Grupos.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGrupoIdChanging(value);
					this.SendPropertyChanging();
					this._GrupoId = value;
					this.SendPropertyChanged("GrupoId");
					this.OnGrupoIdChanged();
				}
			}
		}
		
		[Column(Storage="_Nota", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Nota
		{
			get
			{
				return this._Nota;
			}
			set
			{
				if ((this._Nota != value))
				{
					this.OnNotaChanging(value);
					this.SendPropertyChanging();
					this._Nota = value;
					this.SendPropertyChanged("Nota");
					this.OnNotaChanged();
				}
			}
		}
		
		[Column(Storage="_EvaluacionId", DbType="Int")]
		public System.Nullable<int> EvaluacionId
		{
			get
			{
				return this._EvaluacionId;
			}
			set
			{
				if ((this._EvaluacionId != value))
				{
					this.OnEvaluacionIdChanging(value);
					this.SendPropertyChanging();
					this._EvaluacionId = value;
					this.SendPropertyChanged("EvaluacionId");
					this.OnEvaluacionIdChanged();
				}
			}
		}
		
		[Association(Name="Grupos_AlumnosGrupo", Storage="_Grupos", ThisKey="GrupoId", OtherKey="GrupoId", IsForeignKey=true)]
		public Grupos Grupos
		{
			get
			{
				return this._Grupos.Entity;
			}
			set
			{
				Grupos previousValue = this._Grupos.Entity;
				if (((previousValue != value) 
							|| (this._Grupos.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Grupos.Entity = null;
						previousValue.AlumnosGrupo.Remove(this);
					}
					this._Grupos.Entity = value;
					if ((value != null))
					{
						value.AlumnosGrupo.Add(this);
						this._GrupoId = value.GrupoId;
					}
					else
					{
						this._GrupoId = default(int);
					}
					this.SendPropertyChanged("Grupos");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="EPSE.TrabajosOutcomeAlumno")]
	public partial class TrabajosOutcomeAlumno : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OutcomeId;
		
		private string _AlumnoId;
		
		private int _TrabajoId;
		
		private EntityRef<Trabajos> _Trabajos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOutcomeIdChanging(int value);
    partial void OnOutcomeIdChanged();
    partial void OnAlumnoIdChanging(string value);
    partial void OnAlumnoIdChanged();
    partial void OnTrabajoIdChanging(int value);
    partial void OnTrabajoIdChanged();
    #endregion
		
		public TrabajosOutcomeAlumno()
		{
			this._Trabajos = default(EntityRef<Trabajos>);
			OnCreated();
		}
		
		[Column(Storage="_OutcomeId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int OutcomeId
		{
			get
			{
				return this._OutcomeId;
			}
			set
			{
				if ((this._OutcomeId != value))
				{
					this.OnOutcomeIdChanging(value);
					this.SendPropertyChanging();
					this._OutcomeId = value;
					this.SendPropertyChanged("OutcomeId");
					this.OnOutcomeIdChanged();
				}
			}
		}
		
		[Column(Storage="_AlumnoId", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string AlumnoId
		{
			get
			{
				return this._AlumnoId;
			}
			set
			{
				if ((this._AlumnoId != value))
				{
					this.OnAlumnoIdChanging(value);
					this.SendPropertyChanging();
					this._AlumnoId = value;
					this.SendPropertyChanged("AlumnoId");
					this.OnAlumnoIdChanged();
				}
			}
		}
		
		[Column(Storage="_TrabajoId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int TrabajoId
		{
			get
			{
				return this._TrabajoId;
			}
			set
			{
				if ((this._TrabajoId != value))
				{
					if (this._Trabajos.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTrabajoIdChanging(value);
					this.SendPropertyChanging();
					this._TrabajoId = value;
					this.SendPropertyChanged("TrabajoId");
					this.OnTrabajoIdChanged();
				}
			}
		}
		
		[Association(Name="Trabajos_TrabajosOutcomeAlumno", Storage="_Trabajos", ThisKey="TrabajoId", OtherKey="TrabajoId", IsForeignKey=true)]
		public Trabajos Trabajos
		{
			get
			{
				return this._Trabajos.Entity;
			}
			set
			{
				Trabajos previousValue = this._Trabajos.Entity;
				if (((previousValue != value) 
							|| (this._Trabajos.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Trabajos.Entity = null;
						previousValue.TrabajosOutcomeAlumno.Remove(this);
					}
					this._Trabajos.Entity = value;
					if ((value != null))
					{
						value.TrabajosOutcomeAlumno.Add(this);
						this._TrabajoId = value.TrabajoId;
					}
					else
					{
						this._TrabajoId = default(int);
					}
					this.SendPropertyChanged("Trabajos");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="EPSE.Archivos")]
	public partial class Archivos : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ArchivoId;
		
		private string _Ruta;
		
		private string _Nombre;
		
		private string _AlumnoId;
		
		private System.Nullable<System.DateTime> _FechaSubida;
		
		private EntitySet<ArchivosGrupo> _ArchivosGrupo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnArchivoIdChanging(int value);
    partial void OnArchivoIdChanged();
    partial void OnRutaChanging(string value);
    partial void OnRutaChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnAlumnoIdChanging(string value);
    partial void OnAlumnoIdChanged();
    partial void OnFechaSubidaChanging(System.Nullable<System.DateTime> value);
    partial void OnFechaSubidaChanged();
    #endregion
		
		public Archivos()
		{
			this._ArchivosGrupo = new EntitySet<ArchivosGrupo>(new Action<ArchivosGrupo>(this.attach_ArchivosGrupo), new Action<ArchivosGrupo>(this.detach_ArchivosGrupo));
			OnCreated();
		}
		
		[Column(Storage="_ArchivoId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ArchivoId
		{
			get
			{
				return this._ArchivoId;
			}
			set
			{
				if ((this._ArchivoId != value))
				{
					this.OnArchivoIdChanging(value);
					this.SendPropertyChanging();
					this._ArchivoId = value;
					this.SendPropertyChanged("ArchivoId");
					this.OnArchivoIdChanged();
				}
			}
		}
		
		[Column(Storage="_Ruta", DbType="VarChar(1000)")]
		public string Ruta
		{
			get
			{
				return this._Ruta;
			}
			set
			{
				if ((this._Ruta != value))
				{
					this.OnRutaChanging(value);
					this.SendPropertyChanging();
					this._Ruta = value;
					this.SendPropertyChanged("Ruta");
					this.OnRutaChanged();
				}
			}
		}
		
		[Column(Storage="_Nombre", DbType="VarChar(200)")]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[Column(Storage="_AlumnoId", DbType="VarChar(20)")]
		public string AlumnoId
		{
			get
			{
				return this._AlumnoId;
			}
			set
			{
				if ((this._AlumnoId != value))
				{
					this.OnAlumnoIdChanging(value);
					this.SendPropertyChanging();
					this._AlumnoId = value;
					this.SendPropertyChanged("AlumnoId");
					this.OnAlumnoIdChanged();
				}
			}
		}
		
		[Column(Storage="_FechaSubida", DbType="DateTime")]
		public System.Nullable<System.DateTime> FechaSubida
		{
			get
			{
				return this._FechaSubida;
			}
			set
			{
				if ((this._FechaSubida != value))
				{
					this.OnFechaSubidaChanging(value);
					this.SendPropertyChanging();
					this._FechaSubida = value;
					this.SendPropertyChanged("FechaSubida");
					this.OnFechaSubidaChanged();
				}
			}
		}
		
		[Association(Name="Archivos_ArchivosGrupo", Storage="_ArchivosGrupo", ThisKey="ArchivoId", OtherKey="ArchivoId")]
		public EntitySet<ArchivosGrupo> ArchivosGrupo
		{
			get
			{
				return this._ArchivosGrupo;
			}
			set
			{
				this._ArchivosGrupo.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ArchivosGrupo(ArchivosGrupo entity)
		{
			this.SendPropertyChanging();
			entity.Archivos = this;
		}
		
		private void detach_ArchivosGrupo(ArchivosGrupo entity)
		{
			this.SendPropertyChanging();
			entity.Archivos = null;
		}
	}
	
	[Table(Name="EPSE.ArchivosGrupo")]
	public partial class ArchivosGrupo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ArchivoId;
		
		private int _GrupoId;
		
		private EntityRef<Archivos> _Archivos;
		
		private EntityRef<Grupos> _Grupos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnArchivoIdChanging(int value);
    partial void OnArchivoIdChanged();
    partial void OnGrupoIdChanging(int value);
    partial void OnGrupoIdChanged();
    #endregion
		
		public ArchivosGrupo()
		{
			this._Archivos = default(EntityRef<Archivos>);
			this._Grupos = default(EntityRef<Grupos>);
			OnCreated();
		}
		
		[Column(Storage="_ArchivoId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ArchivoId
		{
			get
			{
				return this._ArchivoId;
			}
			set
			{
				if ((this._ArchivoId != value))
				{
					if (this._Archivos.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnArchivoIdChanging(value);
					this.SendPropertyChanging();
					this._ArchivoId = value;
					this.SendPropertyChanged("ArchivoId");
					this.OnArchivoIdChanged();
				}
			}
		}
		
		[Column(Storage="_GrupoId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int GrupoId
		{
			get
			{
				return this._GrupoId;
			}
			set
			{
				if ((this._GrupoId != value))
				{
					if (this._Grupos.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGrupoIdChanging(value);
					this.SendPropertyChanging();
					this._GrupoId = value;
					this.SendPropertyChanged("GrupoId");
					this.OnGrupoIdChanged();
				}
			}
		}
		
		[Association(Name="Archivos_ArchivosGrupo", Storage="_Archivos", ThisKey="ArchivoId", OtherKey="ArchivoId", IsForeignKey=true)]
		public Archivos Archivos
		{
			get
			{
				return this._Archivos.Entity;
			}
			set
			{
				Archivos previousValue = this._Archivos.Entity;
				if (((previousValue != value) 
							|| (this._Archivos.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Archivos.Entity = null;
						previousValue.ArchivosGrupo.Remove(this);
					}
					this._Archivos.Entity = value;
					if ((value != null))
					{
						value.ArchivosGrupo.Add(this);
						this._ArchivoId = value.ArchivoId;
					}
					else
					{
						this._ArchivoId = default(int);
					}
					this.SendPropertyChanged("Archivos");
				}
			}
		}
		
		[Association(Name="Grupos_ArchivosGrupo", Storage="_Grupos", ThisKey="GrupoId", OtherKey="GrupoId", IsForeignKey=true)]
		public Grupos Grupos
		{
			get
			{
				return this._Grupos.Entity;
			}
			set
			{
				Grupos previousValue = this._Grupos.Entity;
				if (((previousValue != value) 
							|| (this._Grupos.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Grupos.Entity = null;
						previousValue.ArchivosGrupo.Remove(this);
					}
					this._Grupos.Entity = value;
					if ((value != null))
					{
						value.ArchivosGrupo.Add(this);
						this._GrupoId = value.GrupoId;
					}
					else
					{
						this._GrupoId = default(int);
					}
					this.SendPropertyChanged("Grupos");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="EPSE.EvaluacionesGruposProfesor")]
	public partial class EvaluacionesGruposProfesor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ProfesorId;
		
		private int _GrupoId;
		
		private EntityRef<Grupos> _Grupos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProfesorIdChanging(string value);
    partial void OnProfesorIdChanged();
    partial void OnGrupoIdChanging(int value);
    partial void OnGrupoIdChanged();
    #endregion
		
		public EvaluacionesGruposProfesor()
		{
			this._Grupos = default(EntityRef<Grupos>);
			OnCreated();
		}
		
		[Column(Storage="_ProfesorId", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ProfesorId
		{
			get
			{
				return this._ProfesorId;
			}
			set
			{
				if ((this._ProfesorId != value))
				{
					this.OnProfesorIdChanging(value);
					this.SendPropertyChanging();
					this._ProfesorId = value;
					this.SendPropertyChanged("ProfesorId");
					this.OnProfesorIdChanged();
				}
			}
		}
		
		[Column(Storage="_GrupoId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int GrupoId
		{
			get
			{
				return this._GrupoId;
			}
			set
			{
				if ((this._GrupoId != value))
				{
					if (this._Grupos.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGrupoIdChanging(value);
					this.SendPropertyChanging();
					this._GrupoId = value;
					this.SendPropertyChanged("GrupoId");
					this.OnGrupoIdChanged();
				}
			}
		}
		
		[Association(Name="Grupos_EvaluacionesGruposProfesor", Storage="_Grupos", ThisKey="GrupoId", OtherKey="GrupoId", IsForeignKey=true)]
		public Grupos Grupos
		{
			get
			{
				return this._Grupos.Entity;
			}
			set
			{
				Grupos previousValue = this._Grupos.Entity;
				if (((previousValue != value) 
							|| (this._Grupos.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Grupos.Entity = null;
						previousValue.EvaluacionesGruposProfesor.Remove(this);
					}
					this._Grupos.Entity = value;
					if ((value != null))
					{
						value.EvaluacionesGruposProfesor.Add(this);
						this._GrupoId = value.GrupoId;
					}
					else
					{
						this._GrupoId = default(int);
					}
					this.SendPropertyChanged("Grupos");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="EPSE.EvaluacionesOutcomeProfesor")]
	public partial class EvaluacionesOutcomeProfesor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ProfesorId;
		
		private string _PeriodoId;
		
		private int _OutcomeId;
		
		private string _AlumnoId;
		
		private string _Nota;
		
		private System.Nullable<int> _EvaluacionId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProfesorIdChanging(string value);
    partial void OnProfesorIdChanged();
    partial void OnPeriodoIdChanging(string value);
    partial void OnPeriodoIdChanged();
    partial void OnOutcomeIdChanging(int value);
    partial void OnOutcomeIdChanged();
    partial void OnAlumnoIdChanging(string value);
    partial void OnAlumnoIdChanged();
    partial void OnNotaChanging(string value);
    partial void OnNotaChanged();
    partial void OnEvaluacionIdChanging(System.Nullable<int> value);
    partial void OnEvaluacionIdChanged();
    #endregion
		
		public EvaluacionesOutcomeProfesor()
		{
			OnCreated();
		}
		
		[Column(Storage="_ProfesorId", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string ProfesorId
		{
			get
			{
				return this._ProfesorId;
			}
			set
			{
				if ((this._ProfesorId != value))
				{
					this.OnProfesorIdChanging(value);
					this.SendPropertyChanging();
					this._ProfesorId = value;
					this.SendPropertyChanged("ProfesorId");
					this.OnProfesorIdChanged();
				}
			}
		}
		
		[Column(Storage="_PeriodoId", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PeriodoId
		{
			get
			{
				return this._PeriodoId;
			}
			set
			{
				if ((this._PeriodoId != value))
				{
					this.OnPeriodoIdChanging(value);
					this.SendPropertyChanging();
					this._PeriodoId = value;
					this.SendPropertyChanged("PeriodoId");
					this.OnPeriodoIdChanged();
				}
			}
		}
		
		[Column(Storage="_OutcomeId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int OutcomeId
		{
			get
			{
				return this._OutcomeId;
			}
			set
			{
				if ((this._OutcomeId != value))
				{
					this.OnOutcomeIdChanging(value);
					this.SendPropertyChanging();
					this._OutcomeId = value;
					this.SendPropertyChanged("OutcomeId");
					this.OnOutcomeIdChanged();
				}
			}
		}
		
		[Column(Storage="_AlumnoId", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string AlumnoId
		{
			get
			{
				return this._AlumnoId;
			}
			set
			{
				if ((this._AlumnoId != value))
				{
					this.OnAlumnoIdChanging(value);
					this.SendPropertyChanging();
					this._AlumnoId = value;
					this.SendPropertyChanged("AlumnoId");
					this.OnAlumnoIdChanged();
				}
			}
		}
		
		[Column(Storage="_Nota", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Nota
		{
			get
			{
				return this._Nota;
			}
			set
			{
				if ((this._Nota != value))
				{
					this.OnNotaChanging(value);
					this.SendPropertyChanging();
					this._Nota = value;
					this.SendPropertyChanged("Nota");
					this.OnNotaChanged();
				}
			}
		}
		
		[Column(Storage="_EvaluacionId", DbType="Int")]
		public System.Nullable<int> EvaluacionId
		{
			get
			{
				return this._EvaluacionId;
			}
			set
			{
				if ((this._EvaluacionId != value))
				{
					this.OnEvaluacionIdChanging(value);
					this.SendPropertyChanging();
					this._EvaluacionId = value;
					this.SendPropertyChanged("EvaluacionId");
					this.OnEvaluacionIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="EPSE.Grupos")]
	public partial class Grupos : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _GrupoId;
		
		private int _TrabajoId;
		
		private string _Nota;
		
		private string _SeccionId;
		
		private string _LiderId;
		
		private string _NombreTrabajo;
		
		private System.Nullable<int> _EvaluacionId;
		
		private EntitySet<AlumnosGrupo> _AlumnosGrupo;
		
		private EntitySet<ArchivosGrupo> _ArchivosGrupo;
		
		private EntitySet<EvaluacionesGruposProfesor> _EvaluacionesGruposProfesor;
		
		private EntityRef<Trabajos> _Trabajos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGrupoIdChanging(int value);
    partial void OnGrupoIdChanged();
    partial void OnTrabajoIdChanging(int value);
    partial void OnTrabajoIdChanged();
    partial void OnNotaChanging(string value);
    partial void OnNotaChanged();
    partial void OnSeccionIdChanging(string value);
    partial void OnSeccionIdChanged();
    partial void OnLiderIdChanging(string value);
    partial void OnLiderIdChanged();
    partial void OnNombreTrabajoChanging(string value);
    partial void OnNombreTrabajoChanged();
    partial void OnEvaluacionIdChanging(System.Nullable<int> value);
    partial void OnEvaluacionIdChanged();
    #endregion
		
		public Grupos()
		{
			this._AlumnosGrupo = new EntitySet<AlumnosGrupo>(new Action<AlumnosGrupo>(this.attach_AlumnosGrupo), new Action<AlumnosGrupo>(this.detach_AlumnosGrupo));
			this._ArchivosGrupo = new EntitySet<ArchivosGrupo>(new Action<ArchivosGrupo>(this.attach_ArchivosGrupo), new Action<ArchivosGrupo>(this.detach_ArchivosGrupo));
			this._EvaluacionesGruposProfesor = new EntitySet<EvaluacionesGruposProfesor>(new Action<EvaluacionesGruposProfesor>(this.attach_EvaluacionesGruposProfesor), new Action<EvaluacionesGruposProfesor>(this.detach_EvaluacionesGruposProfesor));
			this._Trabajos = default(EntityRef<Trabajos>);
			OnCreated();
		}
		
		[Column(Storage="_GrupoId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int GrupoId
		{
			get
			{
				return this._GrupoId;
			}
			set
			{
				if ((this._GrupoId != value))
				{
					this.OnGrupoIdChanging(value);
					this.SendPropertyChanging();
					this._GrupoId = value;
					this.SendPropertyChanged("GrupoId");
					this.OnGrupoIdChanged();
				}
			}
		}
		
		[Column(Storage="_TrabajoId", DbType="Int NOT NULL")]
		public int TrabajoId
		{
			get
			{
				return this._TrabajoId;
			}
			set
			{
				if ((this._TrabajoId != value))
				{
					if (this._Trabajos.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTrabajoIdChanging(value);
					this.SendPropertyChanging();
					this._TrabajoId = value;
					this.SendPropertyChanged("TrabajoId");
					this.OnTrabajoIdChanged();
				}
			}
		}
		
		[Column(Storage="_Nota", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Nota
		{
			get
			{
				return this._Nota;
			}
			set
			{
				if ((this._Nota != value))
				{
					this.OnNotaChanging(value);
					this.SendPropertyChanging();
					this._Nota = value;
					this.SendPropertyChanged("Nota");
					this.OnNotaChanged();
				}
			}
		}
		
		[Column(Storage="_SeccionId", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		public string SeccionId
		{
			get
			{
				return this._SeccionId;
			}
			set
			{
				if ((this._SeccionId != value))
				{
					this.OnSeccionIdChanging(value);
					this.SendPropertyChanging();
					this._SeccionId = value;
					this.SendPropertyChanged("SeccionId");
					this.OnSeccionIdChanged();
				}
			}
		}
		
		[Column(Storage="_LiderId", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string LiderId
		{
			get
			{
				return this._LiderId;
			}
			set
			{
				if ((this._LiderId != value))
				{
					this.OnLiderIdChanging(value);
					this.SendPropertyChanging();
					this._LiderId = value;
					this.SendPropertyChanged("LiderId");
					this.OnLiderIdChanged();
				}
			}
		}
		
		[Column(Storage="_NombreTrabajo", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string NombreTrabajo
		{
			get
			{
				return this._NombreTrabajo;
			}
			set
			{
				if ((this._NombreTrabajo != value))
				{
					this.OnNombreTrabajoChanging(value);
					this.SendPropertyChanging();
					this._NombreTrabajo = value;
					this.SendPropertyChanged("NombreTrabajo");
					this.OnNombreTrabajoChanged();
				}
			}
		}
		
		[Column(Storage="_EvaluacionId", DbType="Int")]
		public System.Nullable<int> EvaluacionId
		{
			get
			{
				return this._EvaluacionId;
			}
			set
			{
				if ((this._EvaluacionId != value))
				{
					this.OnEvaluacionIdChanging(value);
					this.SendPropertyChanging();
					this._EvaluacionId = value;
					this.SendPropertyChanged("EvaluacionId");
					this.OnEvaluacionIdChanged();
				}
			}
		}
		
		[Association(Name="Grupos_AlumnosGrupo", Storage="_AlumnosGrupo", ThisKey="GrupoId", OtherKey="GrupoId")]
		public EntitySet<AlumnosGrupo> AlumnosGrupo
		{
			get
			{
				return this._AlumnosGrupo;
			}
			set
			{
				this._AlumnosGrupo.Assign(value);
			}
		}
		
		[Association(Name="Grupos_ArchivosGrupo", Storage="_ArchivosGrupo", ThisKey="GrupoId", OtherKey="GrupoId")]
		public EntitySet<ArchivosGrupo> ArchivosGrupo
		{
			get
			{
				return this._ArchivosGrupo;
			}
			set
			{
				this._ArchivosGrupo.Assign(value);
			}
		}
		
		[Association(Name="Grupos_EvaluacionesGruposProfesor", Storage="_EvaluacionesGruposProfesor", ThisKey="GrupoId", OtherKey="GrupoId")]
		public EntitySet<EvaluacionesGruposProfesor> EvaluacionesGruposProfesor
		{
			get
			{
				return this._EvaluacionesGruposProfesor;
			}
			set
			{
				this._EvaluacionesGruposProfesor.Assign(value);
			}
		}
		
		[Association(Name="Trabajos_Grupos", Storage="_Trabajos", ThisKey="TrabajoId", OtherKey="TrabajoId", IsForeignKey=true)]
		public Trabajos Trabajos
		{
			get
			{
				return this._Trabajos.Entity;
			}
			set
			{
				Trabajos previousValue = this._Trabajos.Entity;
				if (((previousValue != value) 
							|| (this._Trabajos.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Trabajos.Entity = null;
						previousValue.Grupos.Remove(this);
					}
					this._Trabajos.Entity = value;
					if ((value != null))
					{
						value.Grupos.Add(this);
						this._TrabajoId = value.TrabajoId;
					}
					else
					{
						this._TrabajoId = default(int);
					}
					this.SendPropertyChanged("Trabajos");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AlumnosGrupo(AlumnosGrupo entity)
		{
			this.SendPropertyChanging();
			entity.Grupos = this;
		}
		
		private void detach_AlumnosGrupo(AlumnosGrupo entity)
		{
			this.SendPropertyChanging();
			entity.Grupos = null;
		}
		
		private void attach_ArchivosGrupo(ArchivosGrupo entity)
		{
			this.SendPropertyChanging();
			entity.Grupos = this;
		}
		
		private void detach_ArchivosGrupo(ArchivosGrupo entity)
		{
			this.SendPropertyChanging();
			entity.Grupos = null;
		}
		
		private void attach_EvaluacionesGruposProfesor(EvaluacionesGruposProfesor entity)
		{
			this.SendPropertyChanging();
			entity.Grupos = this;
		}
		
		private void detach_EvaluacionesGruposProfesor(EvaluacionesGruposProfesor entity)
		{
			this.SendPropertyChanging();
			entity.Grupos = null;
		}
	}
	
	[Table(Name="EPSE.Trabajos")]
	public partial class Trabajos : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TrabajoId;
		
		private string _Codigo;
		
		private int _CursoId;
		
		private string _PeriodoId;
		
		private bool _EsGrupal;
		
		private string _Nombre;
		
		private System.Nullable<System.DateTime> _FechaInicio;
		
		private System.Nullable<System.DateTime> _FechaFin;
		
		private string _Iniciativa;
		
		private string _Instrucciones;
		
		private EntitySet<TrabajosOutcomeAlumno> _TrabajosOutcomeAlumno;
		
		private EntitySet<Grupos> _Grupos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTrabajoIdChanging(int value);
    partial void OnTrabajoIdChanged();
    partial void OnCodigoChanging(string value);
    partial void OnCodigoChanged();
    partial void OnCursoIdChanging(int value);
    partial void OnCursoIdChanged();
    partial void OnPeriodoIdChanging(string value);
    partial void OnPeriodoIdChanged();
    partial void OnEsGrupalChanging(bool value);
    partial void OnEsGrupalChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnFechaInicioChanging(System.Nullable<System.DateTime> value);
    partial void OnFechaInicioChanged();
    partial void OnFechaFinChanging(System.Nullable<System.DateTime> value);
    partial void OnFechaFinChanged();
    partial void OnIniciativaChanging(string value);
    partial void OnIniciativaChanged();
    partial void OnInstruccionesChanging(string value);
    partial void OnInstruccionesChanged();
    #endregion
		
		public Trabajos()
		{
			this._TrabajosOutcomeAlumno = new EntitySet<TrabajosOutcomeAlumno>(new Action<TrabajosOutcomeAlumno>(this.attach_TrabajosOutcomeAlumno), new Action<TrabajosOutcomeAlumno>(this.detach_TrabajosOutcomeAlumno));
			this._Grupos = new EntitySet<Grupos>(new Action<Grupos>(this.attach_Grupos), new Action<Grupos>(this.detach_Grupos));
			OnCreated();
		}
		
		[Column(Storage="_TrabajoId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TrabajoId
		{
			get
			{
				return this._TrabajoId;
			}
			set
			{
				if ((this._TrabajoId != value))
				{
					this.OnTrabajoIdChanging(value);
					this.SendPropertyChanging();
					this._TrabajoId = value;
					this.SendPropertyChanged("TrabajoId");
					this.OnTrabajoIdChanged();
				}
			}
		}
		
		[Column(Storage="_Codigo", DbType="VarChar(10)")]
		public string Codigo
		{
			get
			{
				return this._Codigo;
			}
			set
			{
				if ((this._Codigo != value))
				{
					this.OnCodigoChanging(value);
					this.SendPropertyChanging();
					this._Codigo = value;
					this.SendPropertyChanged("Codigo");
					this.OnCodigoChanged();
				}
			}
		}
		
		[Column(Storage="_CursoId", DbType="Int NOT NULL")]
		public int CursoId
		{
			get
			{
				return this._CursoId;
			}
			set
			{
				if ((this._CursoId != value))
				{
					this.OnCursoIdChanging(value);
					this.SendPropertyChanging();
					this._CursoId = value;
					this.SendPropertyChanged("CursoId");
					this.OnCursoIdChanged();
				}
			}
		}
		
		[Column(Storage="_PeriodoId", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string PeriodoId
		{
			get
			{
				return this._PeriodoId;
			}
			set
			{
				if ((this._PeriodoId != value))
				{
					this.OnPeriodoIdChanging(value);
					this.SendPropertyChanging();
					this._PeriodoId = value;
					this.SendPropertyChanged("PeriodoId");
					this.OnPeriodoIdChanged();
				}
			}
		}
		
		[Column(Storage="_EsGrupal", DbType="Bit NOT NULL")]
		public bool EsGrupal
		{
			get
			{
				return this._EsGrupal;
			}
			set
			{
				if ((this._EsGrupal != value))
				{
					this.OnEsGrupalChanging(value);
					this.SendPropertyChanging();
					this._EsGrupal = value;
					this.SendPropertyChanged("EsGrupal");
					this.OnEsGrupalChanged();
				}
			}
		}
		
		[Column(Storage="_Nombre", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[Column(Storage="_FechaInicio", DbType="DateTime")]
		public System.Nullable<System.DateTime> FechaInicio
		{
			get
			{
				return this._FechaInicio;
			}
			set
			{
				if ((this._FechaInicio != value))
				{
					this.OnFechaInicioChanging(value);
					this.SendPropertyChanging();
					this._FechaInicio = value;
					this.SendPropertyChanged("FechaInicio");
					this.OnFechaInicioChanged();
				}
			}
		}
		
		[Column(Storage="_FechaFin", DbType="DateTime")]
		public System.Nullable<System.DateTime> FechaFin
		{
			get
			{
				return this._FechaFin;
			}
			set
			{
				if ((this._FechaFin != value))
				{
					this.OnFechaFinChanging(value);
					this.SendPropertyChanging();
					this._FechaFin = value;
					this.SendPropertyChanged("FechaFin");
					this.OnFechaFinChanged();
				}
			}
		}
		
		[Column(Storage="_Iniciativa", DbType="VarChar(3) NOT NULL", CanBeNull=false)]
		public string Iniciativa
		{
			get
			{
				return this._Iniciativa;
			}
			set
			{
				if ((this._Iniciativa != value))
				{
					this.OnIniciativaChanging(value);
					this.SendPropertyChanging();
					this._Iniciativa = value;
					this.SendPropertyChanged("Iniciativa");
					this.OnIniciativaChanged();
				}
			}
		}
		
		[Column(Storage="_Instrucciones", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Instrucciones
		{
			get
			{
				return this._Instrucciones;
			}
			set
			{
				if ((this._Instrucciones != value))
				{
					this.OnInstruccionesChanging(value);
					this.SendPropertyChanging();
					this._Instrucciones = value;
					this.SendPropertyChanged("Instrucciones");
					this.OnInstruccionesChanged();
				}
			}
		}
		
		[Association(Name="Trabajos_TrabajosOutcomeAlumno", Storage="_TrabajosOutcomeAlumno", ThisKey="TrabajoId", OtherKey="TrabajoId")]
		public EntitySet<TrabajosOutcomeAlumno> TrabajosOutcomeAlumno
		{
			get
			{
				return this._TrabajosOutcomeAlumno;
			}
			set
			{
				this._TrabajosOutcomeAlumno.Assign(value);
			}
		}
		
		[Association(Name="Trabajos_Grupos", Storage="_Grupos", ThisKey="TrabajoId", OtherKey="TrabajoId")]
		public EntitySet<Grupos> Grupos
		{
			get
			{
				return this._Grupos;
			}
			set
			{
				this._Grupos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TrabajosOutcomeAlumno(TrabajosOutcomeAlumno entity)
		{
			this.SendPropertyChanging();
			entity.Trabajos = this;
		}
		
		private void detach_TrabajosOutcomeAlumno(TrabajosOutcomeAlumno entity)
		{
			this.SendPropertyChanging();
			entity.Trabajos = null;
		}
		
		private void attach_Grupos(Grupos entity)
		{
			this.SendPropertyChanging();
			entity.Trabajos = this;
		}
		
		private void detach_Grupos(Grupos entity)
		{
			this.SendPropertyChanging();
			entity.Trabajos = null;
		}
	}
}
#pragma warning restore 1591
